services:
  web:
    build: .
    command: sh -c "python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env
    environment:
      POSTGRES_HOST: db

  nginx:
    build:
      context: ./nginx
    ports:
    - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    env_file:
      - ./.env

#  celery:
#    build: .
#    command: celery -A config worker -l info -P eventlet
#    volumes:
#      - .:/code
#      - celery_data:/data
#    env_file:
#      - ./.env
#    depends_on:
#      - redis
#
#  beat:
#    build: .
#    command: celery -A config beat -l info -S django
#    volumes:
#      - .:/code
#      - celery_beat_data:/data
#    env_file:
#      - ./.env
#    depends_on:
#      - redis
#      - celery

volumes:
  postgres_data:
  static_volume:
  redis_data:
#  celery_data:
#  celery_beat_data:
